---
import HtmlLayout from "@/layouts/HtmlLayout.astro";
import Container from "@/layouts/Container.astro";
import HighlightCode from "@/components/styleguide/contents/HighlightCode.astro";
import Header from "@/components/layout/Header.astro";

import { componentGuideCode, forLoopCode } from "data/guide/code";
---

<HtmlLayout role="guide">
  <Header />
  <Container>
    <div class="section-group">
      <h2 class="h2-title">Astro static template</h2>
      <p class="description">
        Astro 환경에서 <a
          class="blank-link"
          href="https://ko.wikipedia.org/wiki/Gulp.js"
          target="_blank"
        >
          gulp.js
        </a>
        처럼 빌드 시 정적인 html,css,js파일들을 생성하는 템플릿입니다.
      </p>
    </div>

    <div class="section-group">
      <h3 class="h3-title">사용 목적</h3>

      <p class="description">아래와 같은 프로젝트에서 사용하기에 적합합니다.</p>

      <ul class="list">
        <li class="list-item">
          백엔드 작업이 없는 오로지 HTML,CSS,JS를 이용한 사이트를 (퍼블리싱용) 개발할 때 편리합니다.
        </li>
        <li class="list-item">
          회사 소개 사이트, 랜딩 페이지같이 간단한 페이지를 작업할 때 좋습니다.
        </li>
      </ul>
    </div>

    <div class="section-group">
      <h3 class="h3-title">gulp.js보다 어떤 점이 더 좋은가?</h3>

      <div class="list">
        <li class="list-item">Astro는 vite 기반으로 개발되어 로컬서버 실행 속도가 빠릅니다.</li>
        <li class="list-item">
          필요하다면, .astro 파일 안에서 <a
            class="blank-link"
            href="https://docs.astro.build/en/guides/integrations-guide/"
            target="_blank"
          >
            React, Vue, Svelte, Airplane 과 같은 프론트엔드 프레임워크들이랑 같이 사용할 수
            있습니다.
          </a>
        </li>
        <li class="list-item">
          그 외에도 페이지 전환을 앱 스타일로 할 수 있는 <a
            class="blank-link"
            href="https://docs.astro.build/en/guides/view-transitions/"
            target="_blank"
          >
            View transitions,
          </a>
          <a
            class="blank-link"
            href="https://docs.astro.build/en/basics/astro-components/#slots"
            target="_blank"
          >
            컴포넌트 설계 시 필요한 slot,
          </a>
          <a
            class="blank-link"
            href="https://docs.astro.build/en/guides/integrations-guide/mdx/"
            target="_blank"
          >
            마크다운 파일 내에 컴포넌트를 넣을 수 있는 MDX
          </a>등, 많은 기능들을 지원하고 있습니다.
        </li>
      </div>

      <div class="code-box">
        <p class="description">리액트와 동일하게 map으로 요소를 반복시킬 수 있습니다.</p>
        <HighlightCode langClassName="language-js" code={forLoopCode} />
      </div>

      <div class="code-box">
        <p class="description">
          file include 개념이 아닌, 리액트와 동일한 컴포넌트 작업이 가능합니다.
        </p>
        <HighlightCode langClassName="language-js" code={componentGuideCode} />
      </div>
    </div>
  </Container>
</HtmlLayout>
